#include <iostream>
#include <string>
#include <cstdlib>
#include <unistd.h>
#include <iomanip>
#include "PopulateDisplay.h"
using namespace std;

//populating the hidden display terms array
void populateDisplay :: popDisplayTerms(){
    srand(time(0));
    
    //This set of for loops forces the body to execute until all spots are filled (it'll only pass once code ran enough times to fill all appropriate spots)
    for(int i = 0; i < displayArraySize*displayArraySize/2; i++){
            
        //getting a random term that has not yet been utilized for this set
        do{
            //srand(time(0));
            random1 = rand() % 50;
            tempTerm = chosenTerms[random1];
        }while(checkTermStatus(random1) == 1);
        updateTermStatus(random1);
        
            
        //placing this random term at its first position
        do{
            //srand(time(0));
            random1 = rand() % displayArraySize;
            //srand(time(0));
            random2 = rand() % displayArraySize;
        }while(checkDisplayStatus(random1, random2) != 0);
        updateDisplayStatus(random1, random2);
    
        displayTerms[random1][random2] = tempTerm;
        
        
        //second copy of the same term
        do{
            //srand(time (0));
            random1 = rand() % displayArraySize;
            //srand(time (0));
            random2 = rand() % displayArraySize;
        }while(checkDisplayStatus(random1, random2) != 0);
        updateDisplayStatus(random1, random2);
    
        displayTerms[random1][random2] = tempTerm;
    }
    cout<<"popDisplayTerms complete"<<endl<<endl;
}


//TERM STATUS
int populateDisplay :: checkTermStatus(int x){
    if(termStatus[x] == 0){
        return 0;
    }
    else{
        return 1;
    }
}

void populateDisplay :: updateTermStatus(int x){
    termStatus[x] = 1;
}

//DISPLAY STATUS
int populateDisplay :: checkDisplayStatus(int x, int y){
    if(displayStatus[x][y] == 0){
        return 0;
    }
    else{
        return 1;
    }
}

void populateDisplay :: updateDisplayStatus(int x, int y){
    displayStatus[x][y] = 1;
}
